version: "3.8"

services:
  app:
    build: .
    container_name: PeerCam
    working_dir: /app
    volumes:
      - ./public:/app/public
      - ./server.js:/app/server.js
      - ./package.json:/app/package.json
      - ./package-lock.json:/app/package-lock.json
    command: ["node", "server.js"]
    environment:
      - NODE_ENV=production
    expose:
      - "8080"
    restart: unless-stopped

  apache:
    build:
      context: .
      dockerfile: Dockerfile.apache
    container_name: PeerCam_apache
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    env_file: .env
    volumes:
      - ./apache.conf.template:/usr/local/apache2/conf/httpd.conf.template:ro
      - certs:/usr/local/apache2/certs
    command: sh -c "envsubst '\$DUCKDNS_DOMAIN' < /usr/local/apache2/conf/httpd.conf.template > /usr/local/apache2/conf/httpd.conf && httpd-foreground"
    depends_on:
      - app

  certbot:
    image: certbot/certbot
    container_name: PeerCam_certbot
    restart: "no"
    env_file: .env
    volumes:
      - certs:/etc/letsencrypt
      - ./public:/var/www/certbot
    entrypoint: >
      sh -c "
      echo 'nameserver 1.1.1.1' > /etc/resolv.conf &&
      echo 'nameserver 8.8.8.8' >> /etc/resolv.conf &&
      echo 'Waiting 15s for Apache to start...' && sleep 15 &&
      certbot certonly --webroot --webroot-path /var/www/certbot -n --agree-tos --email $${EMAIL} -d $${DUCKDNS_DOMAIN}
      "
    depends_on:
      - apache

volumes:
  certs:
